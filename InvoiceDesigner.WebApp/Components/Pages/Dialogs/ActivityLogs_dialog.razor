@using InvoiceDesigner.Domain.Shared.DTOs.DtoActivityLog
@using InvoiceDesigner.Domain.Shared.Enums
@using InvoiceDesigner.Domain.Shared.Extensions
@using InvoiceDesigner.Domain.Shared.QueryParameters
@using InvoiceDesigner.Domain.Shared.Responses
@using InvoiceDesigner.WebApp.Helpers

<MudDialog>
	<DialogContent>
		<MudTable ServerData="ServerReload" @ref="_tableActivityLog" Dense="true" Hover="true" RowsPerPage="10">
			<HeaderContent>
				<MudTh>DateTime</MudTh>
				<MudTh>UserName</MudTh>
				<MudTh>Activity</MudTh>
			</HeaderContent>

			<RowTemplate>
				<MudTd DataLabel="DateTime">@context.DateTime</MudTd>
				<MudTd DataLabel="Name">@context.UserName</MudTd>
				<MudTd DataLabel="ActivitiesType">@context.ActivitiesType</MudTd>
			</RowTemplate>
			<NoRecordsContent>
				<MudText>No matching records found</MudText>
			</NoRecordsContent>
			<LoadingContent>
				<MudText>Loading...</MudText>
			</LoadingContent>
			<PagerContent>
				<MudTablePager />
			</PagerContent>
		</MudTable>
	</DialogContent>
	<DialogActions>
		<MudButton OnClick="Close" Color="Color.Secondary">Close</MudButton>
	</DialogActions>
</MudDialog>
@code {
	[CascadingParameter]
	private MudDialogInstance MudDialog { get; set; } = null!;

	[Parameter]
	public HttpRequestHelper HttpHelper { get; set; } = null!;

	[Parameter]
	public EDocumentsTypes DocumentType { get; set; }

	[Parameter]
	public int? EntityId { get; set; }

	private void Close() => MudDialog.Cancel();

	private MudTable<UserActivityLogViewDto> _tableActivityLog = new();

	private async Task<TableData<UserActivityLogViewDto>> ServerReload(TableState state, CancellationToken token)
	{

		var queryParameters = new QueryPagedActivityLogs
			{
				Page = state.Page + 1,
				PageSize = state.PageSize,
				DocumentTypes = DocumentType,
				EntityId = EntityId
			};

		string queryString = queryParameters.ToQueryString();

		var _pagedResult = await HttpHelper.GetDataFromAPI<ResponsePaged<UserActivityLogViewDto>>($"api/UserActivityLog?{queryString}");

		if (_pagedResult != null)
			return new TableData<UserActivityLogViewDto>()
				{
					TotalItems = _pagedResult.TotalCount,
					Items = _pagedResult.Items
				};

		return new();
	}
}
