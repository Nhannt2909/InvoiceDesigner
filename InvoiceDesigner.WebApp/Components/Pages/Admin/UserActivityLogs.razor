@page "/Admin/ActivityLogs"
@using System.Net.Http.Json
@using InvoiceDesigner.Domain.Shared.DTOs.Bank
@using InvoiceDesigner.Domain.Shared.DTOs.DtoActivityLog
@using InvoiceDesigner.Domain.Shared.DTOs.User
@using InvoiceDesigner.Domain.Shared.Enums
@using InvoiceDesigner.Domain.Shared.Extensions
@using InvoiceDesigner.Domain.Shared.Helpers
@using InvoiceDesigner.Domain.Shared.QueryParameters
@using InvoiceDesigner.Domain.Shared.Responses
@using InvoiceDesigner.WebApp.Components.Pages.Dialogs
@using InvoiceDesigner.WebApp.Components.Pages.Helpers
@using InvoiceDesigner.WebApp.Helpers;
@inject IHttpClientFactory HttpClientFactory
@inject ILocalStorageService LocalStorageService
@inject NavigationManager nav
@inject ISnackbar Snackbar
@inject IDialogService DialogService


<MudContainer>
	<MudTable ServerData="ServerReload" @ref="_table" Dense="true" Hover="true" RowsPerPage="20">
		<ToolBarContent>

			<MudText Typo="Typo.h6">@_controller</MudText>
			<MudSpacer />

		</ToolBarContent>

		<HeaderContent>
			<MudTh>Date</MudTh>
			<MudTh>UserName</MudTh>
			<MudTh>DocumentTypes</MudTh>
			<MudTh>ActivitiesType</MudTh>
			<MudTh>EntityId</MudTh>
			<MudTh>EntityNumber</MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Date">@context.DateTime</MudTd>
			<MudTd DataLabel="UserName">@context.UserName</MudTd>
			<MudTd DataLabel="DocumentTypes">@context.DocumentTypes</MudTd>
			<MudTd DataLabel="ActivitiesType">@context.ActivitiesType</MudTd>
			<MudTd DataLabel="EntityId">@context.EntityId</MudTd>
			<MudTd DataLabel="EntityNumber">@context.EntityNumber</MudTd>
		</RowTemplate>
		<NoRecordsContent>
			<MudText>No matching records found</MudText>
		</NoRecordsContent>
		<LoadingContent>
			<MudText>Loading...</MudText>
		</LoadingContent>
		<PagerContent>
			<MudTablePager PageSizeOptions="new int[] {10, 20, 30, 40, 50}" />
		</PagerContent>
	</MudTable>
</MudContainer>

@code {
	private static string _controller = "Admin/ActivityLogs";
	private HttpRequestHelper _httpHelper = null!;

	private MudTable<UserActivityLogViewDto> _table = new();
	private ResponsePaged<UserActivityLogViewDto>? _pagedResult;

	protected override async Task OnInitializedAsync()
	{
		_httpHelper = new HttpRequestHelper(_controller, HttpClientFactory, Snackbar, LocalStorageService, nav, DialogService);
		await Task.Delay(1);
	}

	private async Task<TableData<UserActivityLogViewDto>> ServerReload(TableState state, CancellationToken token)
	{

		var queryParameters = new QueryPagedActivityLogs
			{
				PageSize = state.PageSize,
				Page = state.Page + 1,
			};

		string queryString = queryParameters.ToQueryString();

		_pagedResult = await _httpHelper.GetDataFromAPI<ResponsePaged<UserActivityLogViewDto>>($"api/UserActivityLog?{queryString}");

		if (_pagedResult != null)
			return new TableData<UserActivityLogViewDto>()
				{
					TotalItems = _pagedResult.TotalCount,
					Items = _pagedResult.Items
				};

		return new();
	}

}