@using InvoiceDesigner.Domain.Shared.DTOs.FormDesigners
@using InvoiceDesigner.Domain.Shared.Models.FormDesigner
<MudDialog Style="width:500px; ">
	<DialogContent>

		<MudGrid>
			<MudItem xs="12">
				<MudSelect T="string"
						   Label="Font Size"
						   Value="_selectedFontSize"
						   ValueChanged="OnMudSelectChanged"
						   Variant="Variant.Outlined"
						   Dense="true">
					<MudSelectItem Value="@ConstsCssProperty.Value_10px">@ConstsCssProperty.Value_10px</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_12px">@ConstsCssProperty.Value_12px</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_14px">@ConstsCssProperty.Value_14px</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_16px">@ConstsCssProperty.Value_16px</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_18px">@ConstsCssProperty.Value_18px</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_20px">@ConstsCssProperty.Value_20px</MudSelectItem>
				</MudSelect>
			</MudItem>
			<MudItem xs="8">
				<MudText>Add currency symbol to item prices?</MudText>
			</MudItem>
			<MudItem xs="4">
				<MudSelect T="string"
						   Value="_addCurrencySymbol"
						   ValueChanged="OnAddCurrencySymbolSelectChanged"
						   Variant="Variant.Outlined"
						   Dense="true">
					<MudSelectItem Value="@ConstsCssProperty.Value_None">@ConstsCssProperty.Value_None</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_Left">@ConstsCssProperty.Value_Left</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_Right">@ConstsCssProperty.Value_Right</MudSelectItem>
				</MudSelect>
			</MudItem>
			<MudItem xs="8">
				<MudText>Add currency symbol to footer?</MudText>
			</MudItem>
			<MudItem xs="4">
				<MudSelect T="string"
						   Value="_addCurrencySymbolFooter"
						   ValueChanged="OnAddCurrencySymbolFooterSelectChanged"
						   Variant="Variant.Outlined"
						   Dense="true">
					<MudSelectItem Value="@ConstsCssProperty.Value_None">@ConstsCssProperty.Value_None</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_Left">@ConstsCssProperty.Value_Left</MudSelectItem>
					<MudSelectItem Value="@ConstsCssProperty.Value_Right">@ConstsCssProperty.Value_Right</MudSelectItem>
				</MudSelect>
			</MudItem>
		</MudGrid>
	</DialogContent>
	<DialogActions>
		<MudButton OnClick="Cancel">Cancel</MudButton>
		<MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter]
	private MudDialogInstance MudDialog { get; set; } = null!;

	[Parameter]
	public DropItemEditDto dropItemEditDto { get; set; } = new();

	public string _selectedFontSize = string.Empty;
	public string _addCurrencySymbol = ConstsCssProperty.Value_None;
	public string _addCurrencySymbolFooter = ConstsCssProperty.Value_None;

	private void Cancel() => MudDialog.Cancel();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		if (dropItemEditDto != null)
		{
			var fontSize = dropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.FontSize);
			if (fontSize != null)
				_selectedFontSize = fontSize.Value;

			var addCurrencySymbol = dropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.AddCurrencySymbol);
			if (addCurrencySymbol != null)
				_addCurrencySymbol = addCurrencySymbol.Value;

			var addCurrencySymbolFooter = dropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.AddCurrencySymbolFooter);
			if (addCurrencySymbolFooter != null)
				_addCurrencySymbolFooter = addCurrencySymbolFooter.Value;

		}

	}

	private void OnAddCurrencySymbolFooterSelectChanged(string newValue)
	{
		_addCurrencySymbolFooter = newValue;
	}

	private void OnAddCurrencySymbolSelectChanged(string newValue)
	{
		_addCurrencySymbol = newValue;
	}
	
	private void OnMudSelectChanged(string newValue)
	{
		_selectedFontSize = newValue;
	}

	private void Submit()
	{
		var fontSize = dropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.FontSize);
		if (fontSize != null)
			fontSize.Value = _selectedFontSize;

		var addCurrencySymbol = dropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.AddCurrencySymbol);
		if (addCurrencySymbol != null)
			addCurrencySymbol.Value = _addCurrencySymbol;

		var addCurrencySymbolFooter = dropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.AddCurrencySymbolFooter);
		if (addCurrencySymbolFooter != null)
			addCurrencySymbolFooter.Value = _addCurrencySymbolFooter;


		MudDialog.Close(DialogResult.Ok(dropItemEditDto));
	}

}
